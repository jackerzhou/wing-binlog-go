[2018-04-17 18:24:48,039] TRACE [Controller id=1 epoch=55] Changed partition wing-binlog-event-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=17, isr=List(2), zkVersion=29) (state.change.logger)
[2018-04-17 18:24:48,045] TRACE [Controller id=1 epoch=55] Changed partition wing-binlog-event-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=12, isr=List(2), zkVersion=26) (state.change.logger)
[2018-04-17 18:24:48,050] TRACE [Controller id=1 epoch=55] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=17, isr=2, zkVersion=29, replicas=1,2,0, isNew=false) to broker 2 for partition wing-binlog-event-0 (state.change.logger)
[2018-04-17 18:24:48,050] TRACE [Controller id=1 epoch=55] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=12, isr=2, zkVersion=26, replicas=0,1,2, isNew=false) to broker 2 for partition wing-binlog-event-2 (state.change.logger)
[2018-04-17 18:24:48,059] TRACE [Controller id=1 epoch=55] Sending UpdateMetadata request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=17, isr=[2], zkVersion=29, replicas=[1, 2, 0], offlineReplicas=[1, 0]) to brokers Set(1, 2) for partition wing-binlog-event-0 (state.change.logger)
[2018-04-17 18:24:48,059] TRACE [Controller id=1 epoch=55] Sending UpdateMetadata request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=12, isr=[2], zkVersion=26, replicas=[0, 1, 2], offlineReplicas=[0, 1]) to brokers Set(1, 2) for partition wing-binlog-event-2 (state.change.logger)
[2018-04-17 18:24:48,146] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=55, leader=2, leaderEpoch=17, isr=[2], zkVersion=29, replicas=[1, 2, 0], offlineReplicas=[1, 0]) for partition wing-binlog-event-0 in response to UpdateMetadata request sent by controller 1 epoch 55 with correlation id 10 (state.change.logger)
[2018-04-17 18:24:48,148] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=55, leader=2, leaderEpoch=12, isr=[2], zkVersion=26, replicas=[0, 1, 2], offlineReplicas=[0, 1]) for partition wing-binlog-event-2 in response to UpdateMetadata request sent by controller 1 epoch 55 with correlation id 10 (state.change.logger)
[2018-04-17 18:24:48,179] TRACE [Controller id=1 epoch=55] Received response {error_code=0} for request UPDATE_METADATA with correlation id 10 sent to broker localhost:9093 (id: 1 rack: null) (state.change.logger)
[2018-04-17 18:24:48,202] TRACE [Controller id=1 epoch=55] Changed state of replica 1 for partition wing-binlog-event-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2018-04-17 18:24:48,202] TRACE [Controller id=1 epoch=55] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=13, isr=2, zkVersion=25, replicas=2,0,1, isNew=false) to broker 2 for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,202] TRACE [Controller id=1 epoch=55] Sending become-follower LeaderAndIsr request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=13, isr=2, zkVersion=25, replicas=2,0,1, isNew=false) to broker 0 for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,205] TRACE [Controller id=1 epoch=55] Sending UpdateMetadata request PartitionState(controllerEpoch=55, leader=2, leaderEpoch=13, isr=[2], zkVersion=25, replicas=[2, 0, 1], offlineReplicas=[0, 1]) to brokers Set(1, 2) for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,227] TRACE [Controller id=1 epoch=55] Received response {error_code=0,partitions=[]} for request STOP_REPLICA with correlation id 11 sent to broker localhost:9093 (id: 1 rack: null) (state.change.logger)
[2018-04-17 18:24:48,250] TRACE [Broker id=1] Handling stop replica (delete=false) for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,252] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,255] TRACE [Controller id=1 epoch=55] Received response {error_code=0,partitions=[{topic=wing-binlog-event,partition=1,error_code=0}]} for request STOP_REPLICA with correlation id 12 sent to broker localhost:9093 (id: 1 rack: null) (state.change.logger)
[2018-04-17 18:24:48,256] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=55, leader=2, leaderEpoch=13, isr=[2], zkVersion=25, replicas=[2, 0, 1], offlineReplicas=[0, 1]) for partition wing-binlog-event-1 in response to UpdateMetadata request sent by controller 1 epoch 55 with correlation id 13 (state.change.logger)
[2018-04-17 18:24:48,260] TRACE [Controller id=1 epoch=55] Received response {error_code=0} for request UPDATE_METADATA with correlation id 13 sent to broker localhost:9093 (id: 1 rack: null) (state.change.logger)
[2018-04-17 18:24:48,269] ERROR [Controller id=1 epoch=55] Controller 1 epoch 55 failed to change state for partition wing-binlog-event-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition wing-binlog-event-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:328)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:52)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:326)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:254)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:175)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:116)
	at kafka.controller.KafkaController$ControlledShutdown.doControlledShutdown(KafkaController.scala:1050)
	at kafka.controller.KafkaController$ControlledShutdown.$anonfun$process$1(KafkaController.scala:1026)
	at scala.util.Try$.apply(Try.scala:209)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1026)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:69)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:69)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2018-04-17 18:24:48,285] ERROR [Controller id=1 epoch=55] Controller 1 epoch 55 failed to change state for partition wing-binlog-event-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition wing-binlog-event-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:328)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:52)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:326)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:254)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:175)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:116)
	at kafka.controller.KafkaController$ControlledShutdown.doControlledShutdown(KafkaController.scala:1050)
	at kafka.controller.KafkaController$ControlledShutdown.$anonfun$process$1(KafkaController.scala:1026)
	at scala.util.Try$.apply(Try.scala:209)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1026)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:69)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:69)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2018-04-17 18:24:48,288] ERROR [Controller id=1 epoch=55] Controller 1 epoch 55 failed to change state for partition wing-binlog-event-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition wing-binlog-event-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.PartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:328)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:52)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at kafka.controller.PartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:326)
	at kafka.controller.PartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:254)
	at kafka.controller.PartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:175)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:116)
	at kafka.controller.KafkaController$ControlledShutdown.doControlledShutdown(KafkaController.scala:1050)
	at kafka.controller.KafkaController$ControlledShutdown.$anonfun$process$1(KafkaController.scala:1026)
	at scala.util.Try$.apply(Try.scala:209)
	at kafka.controller.KafkaController$ControlledShutdown.process(KafkaController.scala:1026)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:69)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:69)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2018-04-17 18:24:48,298] TRACE [Controller id=1 epoch=55] Received response {error_code=0,partitions=[]} for request STOP_REPLICA with correlation id 14 sent to broker localhost:9093 (id: 1 rack: null) (state.change.logger)
[2018-04-17 18:24:48,300] TRACE [Broker id=1] Handling stop replica (delete=false) for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,300] TRACE [Broker id=1] Finished handling stop replica (delete=false) for partition wing-binlog-event-1 (state.change.logger)
[2018-04-17 18:24:48,300] TRACE [Controller id=1 epoch=55] Received response {error_code=0,partitions=[{topic=wing-binlog-event,partition=1,error_code=0}]} for request STOP_REPLICA with correlation id 15 sent to broker localhost:9093 (id: 1 rack: null) (state.change.logger)
[2018-04-17 18:24:48,400] TRACE [Controller id=1 epoch=55] Received response {error_code=0,partitions=[{topic=wing-binlog-event,partition=0,error_code=0},{topic=wing-binlog-event,partition=2,error_code=0}]} for request LEADER_AND_ISR with correlation id 6 sent to broker localhost:9094 (id: 2 rack: null) (state.change.logger)
[2018-04-17 18:24:48,430] TRACE [Controller id=1 epoch=55] Received response {error_code=0} for request UPDATE_METADATA with correlation id 7 sent to broker localhost:9094 (id: 2 rack: null) (state.change.logger)
[2018-04-17 18:24:48,447] TRACE [Controller id=1 epoch=55] Received response {error_code=0,partitions=[{topic=wing-binlog-event,partition=1,error_code=0}]} for request LEADER_AND_ISR with correlation id 8 sent to broker localhost:9094 (id: 2 rack: null) (state.change.logger)
[2018-04-17 18:24:48,453] TRACE [Controller id=1 epoch=55] Received response {error_code=0} for request UPDATE_METADATA with correlation id 9 sent to broker localhost:9094 (id: 2 rack: null) (state.change.logger)
